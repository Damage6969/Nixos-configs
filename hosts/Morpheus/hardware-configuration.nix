# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "rpool-damage/nixos";
      fsType = "zfs";
    };

  fileSystems."/nix" =
    { device = "rpool-damage/nixos/nix";
      fsType = "zfs";
    };

  fileSystems."/usr" =
    { device = "rpool-damage/nixos/usr";
      fsType = "zfs";
    };

  fileSystems."/var" =
    { device = "rpool-damage/nixos/var";
      fsType = "zfs";
    };

  fileSystems."/home" =
    { device = "rpool-damage/nixos/home";
      fsType = "zfs";
    };

  fileSystems."/root" =
    { device = "rpool-damage/nixos/root";
      fsType = "zfs";
    };

  fileSystems."/boot/efis/efiboot1" =
    { device = "/dev/disk/by-uuid/0F70-3844";
      fsType = "vfat";
    };

  fileSystems."/boot/efis/efiboot0" =
    { device = "/dev/disk/by-uuid/0F6E-9A01";
      fsType = "vfat";
    };

  fileSystems."/var/lib/lxd/shmounts" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/var/lib/lxd/devlxd" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/mnt/nfs/music" =
    { device = "nas.haines.work:/mnt/NAS/Music";
      fsType = "nfs4";
    };

  fileSystems."/mnt/nfs/john" =
    { device = "nas.haines.work:/mnt/NAS/John";
      fsType = "nfs4";
    };

  fileSystems."/mnt/nfs/Photos" =
    { device = "nas.haines.work:/mnt/NAS/Photos";
      fsType = "nfs4";
    };

  fileSystems."/mnt/nfs/books" =
    { device = "nas.haines.work:/mnt/NAS/Books";
      fsType = "nfs4";
    };

  fileSystems."/boot/efi" =
    { device = "/boot/efis/efiboot0";
      fsType = "none";
      options = [ "bind" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.bond0.useDHCP = lib.mkDefault true;
  # networking.interfaces.bonding_masters.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp13s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp13s0f1.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;
}
